import streamlit as st
import random

# Lista di domande e risposte
questions = [
    {"question": "Qual è la capitale della Francia?", "options": ["Roma", "Londra", "Parigi", "Berlino"], "answer": "Parigi"},
    {"question": "Qual è il simbolo chimico dell'acqua?", "options": ["O2", "H2O", "CO2", "N2"], "answer": "H2O"},
    {"question": "Chi ha scritto 'Il Principe'?", "options": ["Machiavelli", "Dante", "Shakespeare", "Goethe"], "answer": "Machiavelli"},
    {"question": "Qual è la montagna più alta del mondo?", "options": ["K2", "Everest", "Kangchenjunga", "Lhotse"], "answer": "Everest"},
    {"question": "In quale anno è stato lanciato il primo uomo sulla luna?", "options": ["1965", "1969", "1971", "1975"], "answer": "1969"},
    {"question": "Qual è il pianeta più vicino al Sole?", "options": ["Venere", "Marte", "Mercurio", "Terra"], "answer": "Mercurio"},
    {"question": "Quante ossa ha il corpo umano adulto?", "options": ["206", "207", "208", "209"], "answer": "206"},
    {"question": "Chi è il fondatore di Microsoft?", "options": ["Steve Jobs", "Bill Gates", "Mark Zuckerberg", "Larry Page"], "answer": "Bill Gates"},
    {"question": "Che tipo di animale è il delfino?", "options": ["Pesce", "Mammifero", "Rettili", "Uccello"], "answer": "Mammifero"},
    {"question": "Qual è la lingua ufficiale del Brasile?", "options": ["Portoghese", "Spagnolo", "Inglese", "Francese"], "answer": "Portoghese"},
]

# Funzione per selezionare domande random
def get_random_questions():
    return random.sample(questions, 5)

# Inizializzazione dello stato del gioco
if 'players' not in st.session_state:
    st.session_state.players = {}  # Dizionario per i punteggi dei giocatori
    st.session_state.current_player_index = 0  # Indice del giocatore corrente
    st.session_state.current_question = 0  # Indice della domanda corrente
    st.session_state.game_state = 0  # Stato iniziale della macchina a stati (0 = attesa)
    st.session_state.questions = {}  # Domande random per ogni giocatore
    st.session_state.num_players = 0  # Numero di giocatori
    st.session_state.game_over = False  # Flag per segnare la fine del gioco

# Funzione per avanzare al prossimo stato
def next_state():
    if st.session_state.game_state == 1:  # Se siamo nello stato 1 (in attesa di risposta)
        st.session_state.game_state = 2  # Passa allo stato 2 (aggiorna il punteggio e mostra la prossima domanda)
    elif st.session_state.game_state == 2:  # Se siamo nello stato 2 (prossima domanda)
        st.session_state.current_question += 1
        if st.session_state.current_question >= 5:  # Se tutte le domande sono state fatte
            st.session_state.game_state = 3  # Passa allo stato 3 (fine del gioco)
        else:
            st.session_state.game_state = 1  # Torna allo stato 1 per la risposta della prossima domanda

# Funzione per il controllo della risposta e aggiornamento punteggio
def check_answer(answer, correct_answer):
    if answer == correct_answer:
        st.session_state.players[st.session_state.current_player] += 1
        st.write("Risposta corretta!")
    else:
        st.write("Risposta sbagliata!")

# Funzione per determinare il vincitore
def get_winner():
    winner = max(st.session_state.players, key=st.session_state.players.get)
    return winner, st.session_state.players[winner]

# Interfaccia del gioco
st.title('Quiz Game')

# Aggiungi il numero di giocatori
if st.session_state.game_state == 0:  # Se siamo nello stato di attesa
    num_players = st.number_input("Inserisci il numero di giocatori", min_value=1, max_value=10, value=1)
    if st.button("Inizia gioco"):
        st.session_state.num_players = num_players
        # Crea il dizionario di punteggio per ogni giocatore
        for i in range(num_players):
            player_name = f"Giocatore {i + 1}"
            st.session_state.players[player_name] = 0  # Imposta il punteggio iniziale a 0
            st.session_state.questions[player_name] = get_random_questions()  # Assegna le domande random
        st.session_state.game_state = 1  # Passa al primo stato di gioco

# Se il gioco è in corso
if st.session_state.game_state == 1:
    # Ottieni il nome del giocatore corrente
    current_player = list(st.session_state.players.keys())[st.session_state.current_player_index]
    st.session_state.current_player = current_player

    # Mostra il nome del giocatore e la domanda
    st.write(f"È il turno di: {current_player}")
    question = st.session_state.questions[current_player][st.session_state.current_question]
    st.write(question["question"])
    answer = st.radio("Scegli una risposta:", question["options"])

    if st.button("Invia risposta"):
        check_answer(answer, question["answer"])
        next_state()

# Se il gioco è in fase di avanzamento alla prossima domanda
if st.session_state.game_state == 2:
    # Visualizza il punteggio del giocatore corrente
    st.write(f"Punteggio di {st.session_state.current_player}: {st.session_state.players[st.session_state.current_player]}")
    if st.button("Prossima domanda"):
        # Passa al prossimo giocatore
        st.session_state.current_player_index = (st.session_state.current_player_index + 1) % st.session_state.num_players
        next_state()

# Se il gioco è finito
if st.session_state.game_state == 3:
    winner, score = get_winner()
    st.write(f"Il gioco è finito! Il vincitore è {winner} con {score} punti!")
    st.session_state.game_over = True  # Setta il flag del gioco finito

# Messaggio di fine gioco
if st.session_state.game_over:
    st.write("Ricarica la pagina per una nuova partita!")
